{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","updatedSelectedTabId","some","tab","id","className","map","href","onClick","handleTabClick","title","find","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"iMAQaA,EAIR,SAAC,GAIC,IAAD,EAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEIC,EAAuBF,EAEtBD,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,OAC/BE,EAAuBH,EAAK,GAAGM,IASjC,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GAAG,OACX,oBAEEE,UAAWJ,IAAyBE,EAAIC,GAAK,YAAc,GAC3D,UAAQ,MAHV,SAKE,mBACEG,KAAI,WAAMJ,EAAIC,IACd,UAAQ,UACRI,QAAS,kBAnBA,SAACL,GAClBJ,IAAkBI,EAAIC,IACxBJ,EAAcG,GAiBWM,CAAeN,IAHhC,SAKGA,EAAIO,SATFP,EAAIC,WAgBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,mBACGP,EAAKa,MAAK,SAAAR,GAAG,OAAIA,EAAIC,KAAOH,YAD/B,aACG,EAAmDW,cCxCtDd,EAAc,CAClB,CAAEM,GAAI,QAASM,MAAO,QAASE,QAAS,eACxC,CAAER,GAAI,QAASM,MAAO,QAASE,QAAS,eACxC,CAAER,GAAI,QAASM,MAAO,QAASE,QAAS,gBAG7BC,EAAgB,WAAO,IAAD,EACjC,EAA0CC,mBAAShB,EAAK,GAAGM,IAA3D,mBAAOL,EAAP,KAAsBgB,EAAtB,KAEKjB,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAC/BgB,EAAiBjB,EAAK,GAAGM,IAS3B,OACE,sBAAKC,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,IAFH,UAGGP,EAAKa,MAAK,SAAAR,GAAG,OAAIA,EAAIC,KAAOL,YAH/B,aAGG,EAA4CW,SAG/C,cAAC,EAAD,CACEZ,KAAMA,EACNC,cAAeA,EACfC,cAjBoB,SAACG,GACrBJ,IAAkBI,EAAIC,IACxBW,EAAiBZ,EAAIC,WCxB3BY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ac6cb1b4.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Tab {\n  id: string;\n  title: string;\n  content: string;\n}\n\nexport const Tabs: React.FC<{\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n}> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  let updatedSelectedTabId = selectedTabId;\n\n  if (!tabs.some(tab => tab.id === selectedTabId)) {\n    updatedSelectedTabId = tabs[0].id;\n  }\n\n  const handleTabClick = (tab: Tab) => {\n    if (selectedTabId !== tab.id) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              className={updatedSelectedTabId === tab.id ? 'is-active' : ''}\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => handleTabClick(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabs.find(tab => tab.id === updatedSelectedTabId)?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\ninterface Tab {\n  id: string;\n  title: string;\n  content: string;\n}\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  if (!tabs.some(tab => tab.id === selectedTabId)) {\n    setSelectedTabId(tabs[0].id);\n  }\n\n  const handleTabSelected = (tab: Tab) => {\n    if (selectedTabId !== tab.id) {\n      setSelectedTabId(tab.id);\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {tabs.find(tab => tab.id === selectedTabId)?.title}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}